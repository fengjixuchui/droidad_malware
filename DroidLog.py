import json


LOG_ERR = "logs/ERR_LOG/ERR_LOG"
LOG_INTENT = "logs/INTENT_LOG/INTENT_LOG"
LOG_PERMISSION = "logs/INTENT_PERMISSION/INTENT_PERMISSION"
LOG_API = "logs/API_LOG/API"
LOG_LIB = "logs/LIB_LOG/LIB"
global errLogHandler
global intentLogHandler
global permissionLogHandler
global apiHandler
global libHandler

global dictIntent_Local
global dictAPI_Local
global dictPermission_Local
global dictLib_Local
global saveLog
class logInfo:
    def __init__(self,suffix):
        global errLogHandler
        global intentLogHandler
        global permissionLogHandler
        global apiHandler
        global libHandler
        global saveLog
        saveLog = True
        # errLogHandler = open(LOG_ERR+suffix,"w")
        intentLogHandler = open(LOG_INTENT+suffix,"w")
        permissionLogHandler = open(LOG_PERMISSION+suffix, "w")
        apiHandler = open(LOG_API+suffix, "w")
        libHandler = open(LOG_LIB + suffix, "w")
        self.dictIntent_Total = {}
        self.dictAPI_Total= {}
        self.dictPermission_Total = {}
        self.dictLib_Total = {}

    def logAPPStart(self):
        global dictIntent_Local
        global dictAPI_Local
        global dictPermission_Local
        global dictLib_Local
        dictIntent_Local = {}
        dictAPI_Local= {}
        dictPermission_Local = {}
        dictLib_Local = {}


    def logAPPEnd(self):
        global dictIntent_Local
        global dictAPI_Local
        global dictPermission_Local
        global dictLib_Local
        for item in dictAPI_Local:
            value = self.dictAPI_Total.get(item)
            if value is None:
                self.dictAPI_Total[item] = 1
            else:
                self.dictAPI_Total[item] = value + 1

        for item in dictIntent_Local:
            value = self.dictIntent_Total.get(item)
            if value is None:
                self.dictIntent_Total[item] = 1
            else:
                self.dictIntent_Total[item] = value + 1

        for item in dictPermission_Local:
            value = self.dictPermission_Total.get(item)
            if value is None:
                self.dictPermission_Total[item] = 1
            else:
                self.dictPermission_Total[item] = value + 1
        for item in dictLib_Local:
            value = self.dictLib_Total.get(item)
            if value is None:
                self.dictLib_Total[item] = 1
            else:
                self.dictLib_Total[item] = value + 1

    def finishLog(self):
        json.dump(self.dictAPI_Total,apiHandler)
        json.dump(self.dictPermission_Total,permissionLogHandler)
        json.dump(self.dictIntent_Total,intentLogHandler)
        json.dump(self.dictLib_Total, libHandler)
        # errLogHandler.close()
        intentLogHandler.close()
        permissionLogHandler.close()
        apiHandler.close()
        libHandler.close()

def print2ErrLog(content):
    pass
    #errLogHandler.write(content+"\n")

def print2IntentLog(content):
    global dictIntent_Local
    global saveLog
    if saveLog:
        rec = dictIntent_Local.get(content)
        if rec is None:
            dictIntent_Local[content] = 1
    # intentLogHandler.write(content+"\n")

def print2LibLog(content):
    global dictLib_Local
    global saveLog
    if saveLog:
        rec = dictLib_Local.get(content)
        if rec is None:
            dictLib_Local[content] = 1
    # intentLogHandler.write(content+"\n")

def print2PermissionLog(content):
    global dictPermission_Local
    global saveLog
    if saveLog:
        rec = dictPermission_Local.get(content)
        if rec is None:
            dictPermission_Local[content] = 1
    #permissionLogHandler.write(content+"\n")

def print2APILog(content):
    global dictAPI_Local
    global saveLog
    if saveLog:
        rec = dictAPI_Local.get(content)
        if rec is None:
            dictAPI_Local[content] = 1
    #apiHandler.write(content+"\n")

