from androguard.misc import AnalyzeAPK
import MLFeaList

class MLAPK:
    mAPK = None
    mDalvikVMFormat = None
    mAnalysis = None
    def __init__(self,apkPath):
        self.name = apkPath
        self.mAPK, self.mDalvikVMFormat, self.mAnalysis = AnalyzeAPK(apkPath)
        totalLen = len(MLFeaList.permissionList)\
                   +len(MLFeaList.actionList)\
                   +len(MLFeaList.catoList)\
                   +len(MLFeaList.processList)\
                   +len(MLFeaList.providerList)\
                   +len(MLFeaList.schemeList)\
                   +len(MLFeaList.receiverList)\
                   +len(MLFeaList.priorityList)
        self.feaVec = [0]*totalLen

        curOffset = 0
        self.idxDict = {}
        for item in MLFeaList.permissionList:
            self.idxDict[item] = curOffset
            curOffset+=1
        for item in MLFeaList.actionList:
            self.idxDict[item] = curOffset
            curOffset+=1
        for item in MLFeaList.catoList:
            self.idxDict[item] = curOffset
            curOffset+=1
        for item in MLFeaList.processList:
            self.idxDict[item] = curOffset
            curOffset+=1
        for item in MLFeaList.providerList:
            self.idxDict[item] = curOffset
            curOffset+=1
        for item in MLFeaList.schemeList:
            self.idxDict[item] = curOffset
            curOffset+=1
        for item in MLFeaList.receiverList:
            self.idxDict[item] = curOffset
            curOffset+=1
        for item in MLFeaList.priorityList:
            self.idxDict[str(item)] = curOffset
            curOffset+=1

        # permission
        self.permissionTagList = self.mAPK.permissions
        for item in self.permissionTagList:
            for feature in MLFeaList.permissionList:
                if feature in item:
                    idx = self.idxDict.get(feature)
                    self.feaVec[idx]+=1
                    break

        # Intent-Filter(Action)
        self.actionTagList = self.mAPK.find_tags_from_xml('AndroidManifest.xml','action')

        for item in self.actionTagList:
            for feature in MLFeaList.actionList:
                if feature in str(item.attrib):
                    idx = self.idxDict.get(feature)
                    self.feaVec[idx]+=1
                    break


        # Intent_filter (category)
        self.cateTagList = self.mAPK.find_tags_from_xml('AndroidManifest.xml','category')
        for item in self.cateTagList:
            for feature in MLFeaList.catoList:
                if feature in str(item.attrib):
                    idx = self.idxDict.get(feature)
                    self.feaVec[idx]+=1
                    break


        # Process name
        # 四大组件当中的TAG
        self.processAttrList = []
        for item in  self.mAPK.get_all_attribute_value("activity","process",format_value=False):
            self.processAttrList.append(item)
        for item in  self.mAPK.get_all_attribute_value("service","process",format_value=False):
            self.processAttrList.append(item)
        for item in  self.mAPK.get_all_attribute_value("receiver","process",format_value=False):
            self.processAttrList.append(item)
        for item in  self.mAPK.get_all_attribute_value("provider","process",format_value=False):
            self.processAttrList.append(item)

        for item in self.processAttrList:
            for feature in MLFeaList.processList:
                if feature in item:
                    idx = self.idxDict.get(feature)
                    self.feaVec[idx]+=1
                    break


        # Provider
        self.providerTagList = self.mAPK.get_providers()
        for item in self.providerTagList:
            for feature in MLFeaList.processList:
                if feature in item:
                    idx = self.idxDict.get(feature)
                    self.feaVec[idx]+=1
                    break
        # Intent filter(scheme)
        # data里面找
        self.schemeAttrList = []
        for item in  self.mAPK.get_all_attribute_value("data","scheme",format_value=False):
            self.schemeAttrList.append(item)
        for item in self.schemeAttrList:
            for feature in MLFeaList.schemeList:
                # FeaList有File data中有file
                if feature.lower() in item.lower():
                    idx = self.idxDict.get(feature)
                    self.feaVec[idx]+=1
                    break

        # Receiver
        self.receiverNameList = self.mAPK.get_receivers()
        for item in self.receiverNameList:
            for feature in MLFeaList.receiverList:
                if feature in item:
                    idx = self.idxDict.get(feature)
                    self.feaVec[idx]+=1
                    break
        # ONLY FOR BIND_DEVICE_ADMIN
        for item in  self.mAPK.get_all_attribute_value("receiver","permission",format_value=False):
            if "BIND_DEVICE_ADMIN" in item:
                idx = self.idxDict.get("BIND_DEVICE_ADMIN")
                self.feaVec[idx]+=1
            if "SEND" in item:
                idx = self.idxDict.get("SEND")
                self.feaVec[idx]+=1

        # Intent_filter(priority)
        self.priorityAttrList = []
        for item in self.mAPK.get_all_attribute_value("intent-filter","priority",format_value=False):
            self.priorityAttrList.append(item)

        for item in self.priorityAttrList:
            for feature in MLFeaList.priorityList:
                if '0x' in item:
                    value = int(item,16)
                else:
                    value = int(item)
                if value == feature:
                    idx = self.idxDict.get(str(feature))
                    self.feaVec[idx] += 1
    def outPutVec(self):
        outputVec = []
        outputVec.append(self.name)
        outputVec.extend(self.feaVec)
        return outputVec