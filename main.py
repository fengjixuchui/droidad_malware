import csv
import hashlib
import os
import time
import traceback

import DroidLog
from MLAPK import MLAPK
from MLFeaList import getMLHeader
from apkInfoExtractor import appInfo
from apkInfoExtractor import getHeaderList
def getMd5(content):
    md5hash = hashlib.md5(content)
    md5 = md5hash.hexdigest()
    return md5

# 获取文件数据
def get_file_content(filePath):
    f = open(filePath, 'rb')
    fileContent =  f.read()
    f.close()
    return fileContent

if __name__ == "__main__":

    timeStr = time.strftime("_%Y_%m_%d", time.localtime())
    # filename ="VirusShare_05b87566d9c64e2fef63c2b6fa56671f"
    # appInfo("demo.apk").outPutVec()
    # filename="VirusShare_10c3b36dfe6598f71a87d48d22acd7ed"
    #
    #
    # fileContent = get_file_content(apkDir + filename)
    # md5 = getMd5(fileContent)
    # print(md5)
    apkDir = "theApk"
    csvName = "theApk"
    saveCSV = True
    saveLog = True
    AdFeature = True
    fileList = os.listdir(apkDir)
    time_start = time.time()
    count = 0
    if saveCSV:
        csvFile = open(csvName+timeStr+".csv", 'w',newline='')
        csvWrite = csv.writer(csvFile)
    if saveLog:
        myLogInfo = DroidLog.logInfo("_"+csvName+timeStr)

    if saveCSV and AdFeature:
        csvWrite.writerow(getHeaderList())
    elif saveCSV:
        csvWrite.writerow(getMLHeader())
    for item in fileList:
        # if item == "VirusShare_10c3b36dfe6598f71a87d48d22acd7ed":
        #     continue
        try:
            print(str(count)+"================="+item)
            filePath = apkDir+os.sep+item
            count+=1
            if saveLog:
                myLogInfo.logAPPStart()
            if AdFeature:
                app =  appInfo(filePath)
            else:
                app = MLAPK(filePath)
            # print(app.outPutStrVec().replace("[", "").replace("]", ""))
            if saveLog:
                myLogInfo.logAPPEnd()
            if saveCSV:
                csvWrite.writerow(app.outPutVec())
        except Exception as e:
            print("Failed:"+item)
            print("=================" + item)
            # 这个是输出错误类别的，如果捕捉的是通用错误，其实这个看不出来什么
            print('str(Exception):\t' + str(Exception))
            # 这个是输出错误的具体原因，这步可以不用加str，输出
            print('str(e):\t\t' + str(e))
            print('repr(e):\t' + repr(e))
            # 以下两步都是输出错误的具体位置的
            print('traceback.print_exc():' + traceback.format_exc())
            print('traceback.format_exc():\n%s' % traceback.format_exc())
            if saveLog:
                DroidLog.print2ErrLog("================="+item)
                # 这个是输出错误类别的，如果捕捉的是通用错误，其实这个看不出来什么
                DroidLog.print2ErrLog('str(Exception):\t'+str(Exception))
                # 这个是输出错误的具体原因，这步可以不用加str，输出
                DroidLog.print2ErrLog('str(e):\t\t'+ str(e))
                DroidLog.print2ErrLog('repr(e):\t'+ repr(e))
                # 以下两步都是输出错误的具体位置的
                DroidLog.print2ErrLog('traceback.print_exc():'+traceback.format_exc())
                DroidLog.print2ErrLog('traceback.format_exc():\n%s' % traceback.format_exc())

    time_end = time.time()
    if saveCSV:
        csvFile.close()

    timeStr = str(count)+" files spent "+str(time_end-time_start)+"secs!"
    print(timeStr)
    if saveLog:
        DroidLog.print2ErrLog(timeStr)
        myLogInfo.finishLog()
